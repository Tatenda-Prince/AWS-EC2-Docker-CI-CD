name: Deploy to AWS EC2

on:
  push:
    branches:
      - master  # Runs when you push to the master branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: SSH into EC2 and Deploy
      env:
        SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        EC2_IP: ${{ secrets.EC2_PUBLIC_IP }}
        AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        AWS_REGION: "us-east-1"  # Change if your region is different
      run: |
        # Decode and set up SSH key
        echo "$SSH_KEY" | base64 --decode > private_key.pem
        chmod 400 private_key.pem  # Secure the SSH key

        # Connect to EC2 and deploy the container
        ssh -o StrictHostKeyChecking=no -i private_key.pem ec2-user@$EC2_IP << EOF
          set -e  # Stop script if any command fails

          echo "üîπ Checking AWS CLI installation..."
          if ! command -v aws &> /dev/null; then
            echo "‚ùå AWS CLI not found! Installing..."
            sudo yum install -y aws-cli
          fi

          echo "üîπ Logging in to AWS ECR..."
          AWS_ECR_URL="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"
          echo "Using AWS ECR URL: \$AWS_ECR_URL"
          
          # Ensure ECR login is successful
          if ! sudo aws ecr get-login-password --region ${AWS_REGION} | sudo docker login --username AWS --password-stdin \$AWS_ECR_URL; then
            echo "‚ùå Failed to login to AWS ECR!"
            exit 1
          fi

          echo "üîπ Pulling the latest image from ECR..."
          IMAGE="\$AWS_ECR_URL/my-app:latest"
          if ! sudo docker pull \$IMAGE; then
            echo "‚ùå Failed to pull image from ECR!"
            exit 1
          fi

          echo "üîπ Stopping and removing any existing container..."
          sudo docker stop my-app || true
          sudo docker rm my-app || true

          echo "üîπ Removing unused Docker images..."
          sudo docker system prune -af || true

          echo "üîπ Running the new container..."
          if ! sudo docker run -d --name my-app -p 3000:3000 \$IMAGE; then
            echo "‚ùå Failed to start the container!"
            exit 1
          fi

          echo "‚úÖ Deployment complete!"
        EOF
