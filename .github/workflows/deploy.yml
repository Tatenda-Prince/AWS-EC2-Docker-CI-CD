name: Deploy to AWS EC2

on:
  push:
    branches:
      - master  # Runs when you push to the master branch

jobs:
  build-and-push:
    name: Build and Push Docker Image to ECR
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to AWS ECR
      env:
        AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      run: |
        AWS_ECR_URL="${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com"
        aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $AWS_ECR_URL

    - name: Build and Tag Docker Image
      env:
        AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      run: |
        AWS_ECR_URL="${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com"
        IMAGE_TAG="latest"
        docker build -t my-app .
        docker tag my-app:latest $AWS_ECR_URL/my-app:$IMAGE_TAG

    - name: Push Docker Image to ECR
      env:
        AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      run: |
        AWS_ECR_URL="${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com"
        IMAGE_TAG="latest"
        docker push $AWS_ECR_URL/my-app:$IMAGE_TAG

  deploy:
    needs: build-and-push  # Wait until image is pushed
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: SSH into EC2 and Deploy
      env:
        SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        EC2_IP: ${{ secrets.EC2_PUBLIC_IP }}
        AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      run: |
        # Decode and set up SSH key
        echo "$SSH_KEY" | base64 --decode > private_key.pem
        chmod 400 private_key.pem

        # Connect to EC2 and deploy the container
        ssh -o StrictHostKeyChecking=no -i private_key.pem ec2-user@$EC2_IP << EOF
          set -e  

          echo "ðŸ”¹ Logging in to AWS ECR..."
          AWS_ECR_URL="${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com"
          sudo aws ecr get-login-password --region us-east-1 | sudo docker login --username AWS --password-stdin \$AWS_ECR_URL

          echo "ðŸ”¹ Pulling the latest image from ECR..."
          IMAGE="\$AWS_ECR_URL/my-app:latest"
          sudo docker pull \$IMAGE

          echo "ðŸ”¹ Stopping and removing any existing container..."
          sudo docker stop my-app || true
          sudo docker rm my-app || true

          echo "ðŸ”¹ Running the new container..."
          sudo docker run -d --name my-app -p 3000:3000 \$IMAGE

          echo "âœ… Deployment complete!"
        EOF
