name: Deploy to AWS EC2

on:
  push:
    branches:
      - master  # Runs when you push to the master branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: SSH into EC2 and Deploy
      env:
        SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        EC2_IP: ${{ secrets.EC2_PUBLIC_IP }}
        AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      run: |
        # Decode and set up SSH key
        echo "$SSH_KEY" | base64 --decode > private_key.pem
        chmod 400 private_key.pem  # Use more secure permissions

        # Connect to EC2 and deploy the container
        ssh -o StrictHostKeyChecking=no -i private_key.pem ec2-user@$EC2_IP << 'EOF'
          set -e  # Stop script if any command fails

          echo "ðŸ”¹ Logging in to AWS ECR..."
          sudo aws ecr get-login-password --region us-east-1 | sudo docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com

          echo "ðŸ”¹ Pulling the latest image from ECR..."
          sudo docker pull $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/my-app:latest

          echo "ðŸ”¹ Stopping and removing any existing container..."
          sudo docker stop my-app || true
          sudo docker rm my-app || true

          echo "ðŸ”¹ Removing unused Docker images..."
          sudo docker system prune -af || true

          echo "ðŸ”¹ Running the new container..."
          sudo docker run -d --name my-app -p 3000:3000 $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/my-app:latest

          echo "âœ… Deployment complete!"
        EOF
